// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  tweets    Tweet[]  
  followers Follows[] @relation("followers")
  following Follows[] @relation("following")
  likes     Like[]   @relation("likes")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tweet {
  id        Int      @id @default(autoincrement())
  content   String
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  likes     Like[]   @relation("tweetLikes")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follows {
  id         Int    @id @default(autoincrement())
  followerId Int
  followingId Int
  follower   User   @relation("followers", fields: [followerId], references: [id])
  following  User   @relation("following", fields: [followingId], references: [id])
  createdAt  DateTime @default(now())
}

model Like {
  id        Int     @id @default(autoincrement())
  userId    Int
  tweetId   Int
  user      User    @relation("likes", fields: [userId], references: [id])
  tweet     Tweet   @relation("tweetLikes", fields: [tweetId], references: [id])
  createdAt DateTime @default(now())
}

